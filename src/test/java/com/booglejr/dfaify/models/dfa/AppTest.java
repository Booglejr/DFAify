/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.justinwoodring.dfaify.models.dfa;

import org.junit.Test;
import static org.junit.Assert.*;

import com.justinwoodring.dfaify.models.dfa.error.StringContainsLettersNotInAlphabetError;
import com.justinwoodring.dfaify.models.dfa.error.TooManyConnectionsTakingSameCharError;

public class AppTest {
    @Test public void TestStringAlphabetCheck() {
        State state1 = new State("ENTRY", false);
        State state2 = new State("END", true);
        
        state1.connect(state1, '1');
        state1.connect(state2, '0');
        state2.connect(state1, '1');

        DFA dfa = new DFA(state1);

        assertThrows(StringContainsLettersNotInAlphabetError.class, () -> {dfa.run("01k");});
    }

    @Test public void TestRandomDFAOne() {
        State state1 = new State("ENTRY", false);
        State state2 = new State("END", true);
        
        state1.connect(state1, '1');
        state1.connect(state2, '0');
        state2.connect(state1, '1');

        DFA dfa = new DFA(state1);

        assertTrue(dfa.run("0110110"));
        assertTrue(dfa.run("0"));
        assertFalse(dfa.run("1"));
    }

    @Test public void TestTooManyConnectionsCheck() {
        State state1 = new State("ENTRY", false);
        State state2 = new State("END", true);
        
        state1.connect(state1, '1');
        assertThrows(TooManyConnectionsTakingSameCharError.class, () -> {state1.connect(state2, '1');});
    }

    
}
